{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "ReadonlyUser.svelte",
    "RtcVideo.svelte",
    "Story.svelte",
    "User.svelte",
    "WebEditor.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n;\nimport { onMount } from \"svelte\";\nimport { fade, fly } from \"svelte/transition\";\n// @ts-ignore\nconst { ipcRenderer } = require(\"electron\");\nimport WebEditor from \"./WebEditor.svelte\";\nimport Story from \"./Story.svelte\";\nimport User from \"./User.svelte\";\nimport ReadonlyUser from \"./ReadonlyUser.svelte\";\nimport Share from \"./Share.svelte\";\nimport { formatTime, genNewScene, genId } from \"./utils\";\n;\nimport { users, remoteStory, readonlyUsersMap, rtm } from \"./store\";\nimport PlusCircle from \"./icons/plus-circle.svg\";\nimport Cross from \"./icons/cross.svg\";\nimport ArrowLeft from \"./icons/arrow-left.svg\";\nlet stories = [];\nlet currentStory = stories.length ? stories[0] : null;\nlet previewStory = null;\nlet originalCurrentStory;\nremoteStory.subscribe((newValue) => {\n    if (newValue) {\n        originalCurrentStory = currentStory;\n        currentStory = newValue;\n    }\n    else {\n        currentStory = originalCurrentStory;\n        originalCurrentStory = null;\n    }\n});\nfunction addStory() {\n    const newStory = {\n        id: genId(),\n        name: \"\",\n        chapters: [\n            {\n                id: genId(),\n                name: \"\",\n                sequence: [],\n            },\n        ],\n    };\n    stories = [...stories, newStory];\n    currentStory = newStory;\n}\nlet currentChapter = null;\nfunction addChapter() {\n    const newChapter = {\n        id: genId(),\n        name: \"\",\n        sequence: [],\n    };\n    currentStory.chapters = [...currentStory.chapters, newChapter];\n}\nlet currentScene = null;\nfunction addScene(chapter) {\n    currentChapter = chapter;\n    const newScene = genNewScene();\n    chapter.sequence = chapter.sequence.concat(newScene);\n    currentScene = newScene;\n}\nfunction editScene(chapter, scene) {\n    currentChapter = chapter;\n    currentScene = scene;\n}\nfunction finishScene() {\n    currentChapter = null;\n    currentScene = null;\n}\nfunction removeScene(chapter, scene) {\n    return __awaiter(this, void 0, void 0, function* () {\n        chapter.sequence = chapter.sequence.filter((s) => s !== scene);\n        currentStory.chapters = currentStory.chapters.slice();\n        yield flushStories();\n    });\n}\nfunction flushStories() {\n    return __awaiter(this, void 0, void 0, function* () {\n        stories = stories.slice();\n        yield ipcRenderer.invoke(\"setStoreValue\", \"stories\", stories);\n    });\n}\nfunction addStylesheetRules(rules) {\n    const sheets = document.styleSheets[document.styleSheets.length - 1];\n    try {\n        rules.forEach((rule) => {\n            sheets.insertRule(rule, sheets.cssRules.length);\n        });\n        // eslint-disable-next-line\n    }\n    catch (_a) { }\n}\nfunction patchStyle() {\n    if (!window.navigator.platform.includes(\"Mac\")) {\n        // scrollbar style\n        const scrollbarArr = [\n            \"*::-webkit-scrollbar-track {background-color: transparent}\",\n            \"*::-webkit-scrollbar {width: 8px; height: 8px; background-color: transparent}\",\n            \"*::-webkit-scrollbar-thumb {border-radius: 4px; background-color: rgba(225, 229, 235, 0.8)}\",\n            \"*::-webkit-scrollbar-thumb:hover {background-color: rgba(142, 154, 169, 0.8)}\",\n            \"*::-webkit-scrollbar-thumb:active {background-color: rgba(53, 63, 78, 0.8)}\",\n        ];\n        addStylesheetRules(scrollbarArr);\n    }\n}\nlet showShare = false;\nfunction inScene(id) {\n    users.update((prev) => prev.map((u) => {\n        if (u.readonly) {\n            return u;\n        }\n        return Object.assign(Object.assign({}, u), { uiMap: {\n                sceneId: id,\n            } });\n    }));\n    $rtm === null || $rtm === void 0 ? void 0 : $rtm.syncUiMaps($users);\n}\nfunction outScene() {\n    users.update((prev) => prev.map((u) => {\n        if (u.readonly) {\n            return u;\n        }\n        return Object.assign(Object.assign({}, u), { uiMap: {\n                sceneId: undefined,\n            } });\n    }));\n    $rtm === null || $rtm === void 0 ? void 0 : $rtm.syncUiMaps($users);\n}\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\n    patchStyle();\n    stories = (yield ipcRenderer.invoke(\"getStoreValue\", \"stories\")) || [];\n    currentStory = stories.length ? stories[0] : null;\n}));\n//# sourceMappingURL=App.svelte.js.map</script>\n\n<style>\n  [contenteditable] {\n    padding: 0.5em;\n    border: 1px solid #eee;\n    border-radius: 4px;\n  }\n  [contenteditable]:hover {\n    border-color: #5a5c69;\n  }\n  [contenteditable]:empty:before {\n    content: attr(placeholder);\n    color: rgba(0, 0, 0, 0.4);\n  }\n\n  #accordionSidebar .btn-light {\n    width: 60%;\n    max-width: 100px;\n    display: block;\n    margin: 0 auto;\n  }\n\n  .empty {\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .chapter {\n    margin-left: 1.5em;\n    padding-left: 0.5em;\n    margin-bottom: 0.5em;\n    border-left: 2px solid rgba(0, 0, 0, 0.2);\n  }\n\n  .remove-btn {\n    position: absolute;\n    right: -0.5em;\n    top: -0.5em;\n    display: none;\n    z-index: 9;\n    font-size: 16px;\n    padding: 0;\n  }\n\n  .card:hover .remove-btn {\n    display: inherit;\n  }\n\n  .chapters {\n    display: flex;\n    overflow: auto;\n    align-items: center;\n    padding: 0.5em 0;\n  }\n\n  .add-scene {\n    height: 64px;\n    font-size: 24px;\n  }\n\n  :global(.card-sm) {\n    padding: 0.25em 0.5em;\n  }\n\n  .editor-wrapper {\n    flex: 1;\n    position: relative;\n  }\n\n  .stick-users {\n    position: absolute;\n    right: -0.5em;\n    bottom: -0.5em;\n  }\n</style>\n\n<div id=\"wrapper\">\n  <ul\n    class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\"\n    id=\"accordionSidebar\">\n    <div class=\"sidebar-brand d-flex align-items-center justify-content-center\">\n      Storyteller\n    </div>\n    <hr class=\"sidebar-divider\" />\n    <div class=\"sidebar-heading\">故事</div>\n    {#each stories as story}\n      <li class=\"nav-item\">\n        <!-- svelte-ignore a11y-invalid-attribute -->\n        <a\n          class=\"nav-link\"\n          href=\"#\"\n          on:click={() => {\n            currentStory = story;\n          }}>\n          <span>{story.name}</span>\n        </a>\n        <div class={`collapse ${currentStory === story ? 'show' : ''}`}>\n          <div class=\"bg-white py-2 collapse-inner rounded\">\n            <h6 class=\"collapse-header\">章节：</h6>\n            {#each story.chapters as chapter}\n              <div class=\"collapse-item\" href=\"#\">{chapter.name}</div>\n            {/each}\n          </div>\n        </div>\n      </li>\n    {/each}\n    <hr class=\"sidebar-divider\" />\n    <button type=\"button\" class=\"btn btn-light\" on:click={addStory}>\n      新增故事\n    </button>\n  </ul>\n  <div id=\"content-wrapper\" class=\"d-flex flex-column\">\n    <div id=\"content\">\n      <nav\n        class=\"navbar navbar-expand navbar-light bg-white topbar static-top mb-4\n          shadow justify-content-end\">\n        {#if currentChapter}\n          <div class=\"navbar-nav mr-auto\" transition:fade>\n            <span\n              role=\"button\"\n              class=\"mr-2\"\n              on:click={finishScene}>{@html ArrowLeft}</span>\n            <strong>{currentChapter.name}</strong>\n          </div>\n        {/if}\n        {#each $users.filter((u) => u.readonly) as ru}\n          <div class=\"mr-1\">\n            <ReadonlyUser user={ru} />\n          </div>\n        {/each}\n        <User />\n        <button\n          class=\"btn btn-success mr-3\"\n          on:click={() => (showShare = true)}>协作</button>\n        {#if currentStory}\n          <button\n            class=\"btn btn-light mr-3\"\n            on:click={() => {\n              if (previewStory) {\n                previewStory = null;\n              } else {\n                previewStory = currentStory;\n              }\n            }}>\n            {previewStory ? '返回' : '预览'}\n          </button>\n        {/if}\n      </nav>\n      {#if !currentStory}\n        <div class=\"empty\">\n          <button type=\"button\" class=\"btn btn-primary\" on:click={addStory}>\n            新增故事\n          </button>\n        </div>\n      {:else if previewStory}\n        <Story story={previewStory} />\n      {:else if currentChapter}\n        <div class=\"editor-wrapper\" in:fly>\n          <WebEditor\n            chapter={currentChapter}\n            sceneIdx={currentChapter.sequence.indexOf(currentScene)}\n            on:update={flushStories} />\n        </div>\n      {:else}\n        <div class=\"container\">\n          <h1\n            contenteditable\n            bind:innerHTML={currentStory.name}\n            placeholder=\"请输入故事标题\"\n            on:blur={() => {\n              flushStories();\n              $rtm?.syncStory({\n                op: 'set-story-name',\n                value: {\n                  id: currentStory.id,\n                  name: currentStory.name,\n                },\n              });\n            }} />\n          <div />\n          {#each currentStory.chapters as chapter}\n            <div class=\"chapter\">\n              <h2\n                contenteditable\n                bind:innerHTML={chapter.name}\n                placeholder=\"请输入章节标题\"\n                on:blur={() => {\n                  flushStories();\n                  $rtm?.syncStory({\n                    op: 'set-chapter-name',\n                    value: {\n                      id: chapter.id,\n                      name: chapter.name,\n                    },\n                  });\n                }} />\n              <div class=\"chapters\">\n                {#each chapter.sequence as scene}\n                  {#if currentScene === scene}\n                    <div class=\"col-12\" />\n                  {:else}\n                    <div class=\"col-lg-3 col-md-6\">\n                      <div\n                        class=\"card border-left-primary shadow h-100 py-2\"\n                        on:click={() => editScene(chapter, scene)}\n                        role=\"button\">\n                        <button\n                          class=\"btn btn-sm btn-danger btn-circle remove-btn\"\n                          on:click|stopPropagation={() => removeScene(chapter, scene)}>\n                          {@html Cross}\n                        </button>\n                        <div class=\"card-body card-sm\">\n                          <div class=\"row no-gutters align-items-center\">\n                            <div class=\"col mr-2\">\n                              <div\n                                class=\"text-xs font-weight-bold text-primary\n                                  text-uppercase mb-1\"\n                                contenteditable\n                                bind:innerHTML={scene.name}\n                                placeholder=\"请输入场景名称\"\n                                on:blur={() => {\n                                  flushStories();\n                                  outScene();\n                                  $rtm?.syncStory({\n                                    op: 'set-scene-name',\n                                    value: {\n                                      id: scene.id,\n                                      name: scene.name,\n                                      chapterId: chapter.id,\n                                    },\n                                  });\n                                }}\n                                on:click={(e) => e.stopPropagation()}\n                                on:focus={() => inScene(scene.id)}>\n                                {scene.name}\n                              </div>\n                              <div\n                                class=\"h5 mb-0 font-weight-bold text-gray-800\">\n                                时长：{formatTime(scene.totalTime)}\n                                <div class=\"stick-users\">\n                                  {#each $readonlyUsersMap.scenes[scene.id] || [] as user}\n                                    <ReadonlyUser {user} />\n                                  {/each}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  {/if}\n                {/each}\n                {#if !currentScene}\n                  <button\n                    class=\"btn btn-light add-scene\"\n                    on:click={() => addScene(chapter)}>\n                    {@html PlusCircle}\n                  </button>\n                {/if}\n              </div>\n            </div>\n          {/each}\n          <div>\n            <button type=\"button\" class=\"btn btn-light\" on:click={addChapter}>\n              新增章节\n            </button>\n          </div>\n        </div>\n      {/if}\n    </div>\n  </div>\n</div>\n\n<Share\n  visible={showShare}\n  on:close={() => (showShare = false)}\n  story={currentStory} />\n",
    "<script lang=\"ts\">import { hashStringToColor, invertColor } from \"./utils\";\n;\nexport let user;\nexport let small = false;\n$: normalizedName = user.username;\n$: char = normalizedName.slice(0, 1);\n$: color = hashStringToColor(normalizedName);\n//# sourceMappingURL=ReadonlyUser.svelte.js.map</script>\n\n<style>\n  .user {\n    width: 32px;\n    height: 32px;\n    border-radius: 16px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 18px;\n    font-weight: bold;\n    transition: ease-in-out 0.18s;\n  }\n\n  .user-sm {\n    width: 16px;\n    height: 16px;\n    border-radius: 8px;\n    font-size: 9px;\n  }\n</style>\n\n<div\n  class=\"user {small ? 'user-sm' : ''}\"\n  role=\"button\"\n  title={normalizedName}\n  style=\"background: {color}; color: {invertColor(color)}\">\n  {char}\n</div>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createEventDispatcher } from \"svelte\";\nimport { rtc } from \"./store\";\nimport * as cr from \"./cloud-recording\";\nimport Play from \"./icons/play.svg\";\nimport Pause from \"./icons/pause.svg\";\nconst dispatch = createEventDispatcher();\nexport let visible = false;\n$: {\n    if (visible) {\n        init();\n    }\n}\nlet resourceId;\nlet sid;\nlet startAt;\nfunction startRecord() {\n    return __awaiter(this, void 0, void 0, function* () {\n        $rtc.client.publish($rtc.localStream, (err) => {\n            if (err) {\n                throw err;\n            }\n        });\n        resourceId = yield cr.acquire($rtc.channel);\n        sid = yield cr.start($rtc.channel, resourceId, {\n            uids: [$rtc.uid],\n        });\n        startAt = new Date().getTime();\n    });\n}\nfunction stopRecord() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const file = yield cr.stop(resourceId, sid, $rtc.channel);\n        const duration = new Date().getTime() - startAt;\n        dispatch(\"finish\", { file, duration });\n        stop();\n        playing = false;\n    });\n}\nfunction stop() {\n    $rtc.localStream.stop();\n    $rtc.localStream.close();\n}\nfunction init() {\n    $rtc.localStream.init(() => {\n        $rtc.localStream.play(\"rtc-video-placeholder\");\n    }, (err) => {\n        if (err.msg === \"STREAM_ALREADY_INITIALIZED\") {\n            $rtc.localStream.play(\"rtc-video-placeholder\");\n        }\n        else {\n            throw err;\n        }\n    });\n}\nlet playing = false;\nfunction handleClose() {\n    stop();\n    dispatch(\"close\");\n    playing = false;\n}\nfunction toggle() {\n    playing = !playing;\n    if (playing) {\n        startRecord();\n    }\n    else {\n        stopRecord();\n    }\n}\n//# sourceMappingURL=RtcVideo.svelte.js.map</script>\n\n<style>\n  #rtc-video-placeholder {\n    width: 150px;\n    height: 150px;\n    border-radius: 75px;\n    background: #858796;\n    overflow: hidden;\n    margin: 0 auto;\n  }\n\n  .close-video {\n    left: 80px;\n    top: -20px;\n    position: absolute;\n  }\n\n  .toggle-video {\n    left: 30px;\n    top: -20px;\n    position: absolute;\n  }\n</style>\n\n{#if visible}\n  <div id=\"rtc-video-placeholder\" />\n  <button\n    type=\"button\"\n    class=\"btn-circle btn btn-primary toggle-video\"\n    on:click={toggle}>\n    {#if playing}\n      {@html Pause}\n    {:else}\n      {@html Play}\n    {/if}\n  </button>\n  <button\n    type=\"button\"\n    class=\"btn-circle btn btn-dark close-video\"\n    on:click={handleClose}\n    disabled={playing}>\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n{/if}\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n;\nimport Replayer from \"rrweb-player\";\nimport { mirror } from \"rrweb\";\nimport { onMount, tick } from \"svelte\";\nimport videojs from \"video.js\";\n;\nimport { env } from \"./store\";\n// @ts-ignore\nrequire(\"@videojs/http-streaming\");\nlet playerEl;\nlet player;\nlet chapterIdx = 0;\n$: chapter = story.chapters[chapterIdx];\nlet sceneIdx = 0;\n$: scene = chapter === null || chapter === void 0 ? void 0 : chapter.sequence[sceneIdx];\n$: tooltips = scene.effects\n    .filter((e) => e.type === \"tooltip\")\n    .map((e) => e.payload);\n$: skips = scene.effects\n    .filter((e) => e.type === \"skip\")\n    .map((e) => e.payload);\n$: videos = scene.effects\n    .filter((e) => e.type === \"rtc-video\")\n    .map((e) => e.payload);\nlet tooltipIdx = 0;\n$: nextTooltip = tooltips[tooltipIdx];\nlet tooltipEl;\nlet tooltipTargetEl;\nlet tooltipTargetMaskEl;\nlet skipIdx = 0;\n$: nextSkip = skips[skipIdx];\nlet videoIdx = 0;\n$: nextVideo = videos[videoIdx];\nexport let story;\nlet percent = 0;\nfunction playScene() {\n    percent = 0;\n    playerEl.innerHTML = \"\";\n    const { width, height } = playerEl.getBoundingClientRect();\n    player = new Replayer({\n        target: playerEl,\n        props: {\n            events: scene.events,\n            skipInactive: true,\n            autoPlay: true,\n            showController: false,\n            width,\n            height,\n            showDebug: false,\n            showWarning: false,\n        },\n    });\n    const mirror = player.getMirror();\n    const rrwebReplayer = player.getReplayer();\n    let scale = 1;\n    const base = {\n        left: 0,\n        top: 0,\n    };\n    player.addEventListener(\"resize\", () => {\n        const matchedArr = getComputedStyle(rrwebReplayer.wrapper).transform.match(/matrix\\(([\\d\\.]+)/);\n        if (matchedArr) {\n            scale = parseFloat(matchedArr[1]);\n        }\n        const { left, top } = rrwebReplayer.wrapper.getBoundingClientRect();\n        const { left: _left, top: _top, } = rrwebReplayer.wrapper.parentElement.getBoundingClientRect();\n        base.left = left - _left;\n        base.top = top - _top;\n    });\n    player.addEventListener(\"ui-update-progress\", (event) => {\n        percent = event.payload;\n    });\n    player.addEventListener(\"finish\", () => __awaiter(this, void 0, void 0, function* () {\n        percent = 1;\n        if (sceneIdx < chapter.sequence.length - 1) {\n            sceneIdx++;\n            tooltipIdx = 0;\n            yield tick();\n            return playScene();\n        }\n        while (chapterIdx < story.chapters.length - 1) {\n            chapterIdx++;\n            sceneIdx = 0;\n            tooltipIdx = 0;\n            yield tick();\n            if (scene) {\n                return playScene();\n            }\n        }\n    }));\n    player.addEventListener(\"ui-update-current-time\", (event) => {\n        if (nextTooltip && nextTooltip.timeOffset <= event.payload) {\n            player.pause();\n            videoPlayer === null || videoPlayer === void 0 ? void 0 : videoPlayer.pause();\n            tooltipTargetEl = mirror.getNode(nextTooltip.id);\n            if (tooltipTargetEl) {\n                const { left, top, width, height, } = tooltipTargetEl.getBoundingClientRect();\n                Object.assign(tooltipEl.style, {\n                    left: `${(left + width) * scale + base.left}px`,\n                    top: `${(top + height) * scale + base.top}px`,\n                    display: \"inherit\",\n                });\n                Object.assign(tooltipTargetMaskEl.style, {\n                    left: `${left * scale + base.left}px`,\n                    top: `${top * scale + base.top}px`,\n                    width: `${width * scale}px`,\n                    height: `${height * scale}px`,\n                    display: \"inherit\",\n                });\n            }\n        }\n        if (nextSkip && nextSkip.timeOffset <= event.payload) {\n            const nextTimeOffset = nextSkip.timeOffset + nextSkip.duration;\n            player.goto(nextTimeOffset);\n            skipIdx++;\n        }\n        if (nextVideo && nextVideo.timeOffset <= event.payload) {\n            playVideo(nextVideo.file);\n            videoIdx++;\n        }\n    });\n}\nfunction next() {\n    Object.assign(tooltipEl.style, {\n        left: 0,\n        top: 0,\n        display: \"none\",\n    });\n    Object.assign(tooltipTargetMaskEl.style, {\n        left: 0,\n        top: 0,\n        display: \"none\",\n    });\n    tooltipIdx++;\n    player.play();\n    videoPlayer === null || videoPlayer === void 0 ? void 0 : videoPlayer.play();\n}\nlet videoPlaceholder;\nlet videoPlayer;\nfunction playVideo(file) {\n    const videoEl = document.createElement(\"video\");\n    videoEl.id = \"player\";\n    videoEl.width = 150;\n    videoEl.height = 150;\n    videoEl.classList.add(\"video-js\", \"vjs-default-skin\");\n    videoPlaceholder.appendChild(videoEl);\n    videoPlaceholder.style.display = \"block\";\n    videoPlayer = videojs(\"#player\");\n    player === null || player === void 0 ? void 0 : player.pause();\n    videoPlayer.ready(() => {\n        videoPlayer.play();\n        videoPlayer.on(\"canplay\", () => {\n            player === null || player === void 0 ? void 0 : player.play();\n        });\n    });\n    videoPlayer.on(\"ended\", function () {\n        this.dispose();\n        videoPlaceholder.style.display = \"none\";\n    });\n    videoPlayer.src({\n        type: \"application/x-mpegURL\",\n        src: `${$env.STORAGE_BUCKET_URL}/${file}`,\n    });\n}\nonMount(() => {\n    if (!scene) {\n        return;\n    }\n    playScene();\n});\n//# sourceMappingURL=Story.svelte.js.map</script>\n\n<style>\n  .story-wrapper {\n    padding: 0.5em;\n    height: calc(100vh - 78px);\n  }\n\n  .story-player {\n    height: 100%;\n  }\n\n  .story-tooltip {\n    position: absolute;\n    z-index: 999999;\n    background: white;\n    color: #212529;\n    padding: 0.5em 0.75em;\n    display: none;\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    border-radius: 0.3rem;\n  }\n\n  .story-tooltip-meta {\n    border-top: 1px solid rgba(0, 0, 0, 0.2);\n    margin-top: 4px;\n    padding-top: 4px;\n    text-align: right;\n  }\n\n  .story-tooltip-target-mask {\n    position: absolute;\n    z-index: 999999;\n    display: none;\n    outline: 2px solid #e74a3b;\n    outline-offset: -1px;\n    cursor: pointer;\n    background-color: transparent;\n  }\n  .story-tooltip-target-mask:hover {\n    background-color: rgba(255, 255, 255, 0.25);\n  }\n\n  .base-wrapper {\n    height: 100%;\n    position: relative;\n  }\n\n  .story-scene-progress {\n    height: 2px;\n    background: #eee;\n    position: relative;\n    border-radius: 1px;\n    box-sizing: border-box;\n  }\n\n  .story-scene-progress-step {\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    background: rgba(78, 115, 223, 0.5);\n    border-radius: 1px;\n  }\n\n  .story-video-placeholder {\n    position: absolute;\n    right: 2em;\n    bottom: 2em;\n    width: 150px;\n    height: 150px;\n    border-radius: 75px;\n    overflow: hidden;\n    display: none;\n  }\n</style>\n\n<div class=\"story-wrapper row\">\n  <div class=\"col-9\">\n    <div class=\"base-wrapper\">\n      <div class=\"story-player\" bind:this={playerEl} />\n      <div bind:this={tooltipEl} class=\"story-tooltip\">\n        {#if nextTooltip}\n          <div>{nextTooltip.content}</div>\n          <div class=\"story-tooltip-meta\">\n            {tooltipIdx + 1}/{tooltips.length}\n          </div>\n        {/if}\n      </div>\n      <div\n        bind:this={tooltipTargetMaskEl}\n        class=\"story-tooltip-target-mask\"\n        on:click={next} />\n      <div class=\"story-video-placeholder\" bind:this={videoPlaceholder} />\n    </div>\n  </div>\n  <div class=\"col-3\">\n    <div class=\"story-chapters\">\n      {#each story.chapters as chapter, cIdx}\n        <div\n          class={`card ${cIdx === chapterIdx ? 'bg-primary text-white' : 'bg-light text-black'} mb-1 shadow`}>\n          <div class=\"card-body\">\n            {chapter.name}\n            {#if cIdx !== chapterIdx}\n              <div\n                class={`${cIdx === chapterIdx ? 'text-white-50' : 'text-black-50'} small`}>\n                {chapter.sequence.map((s) => s.name).join(' -> ')}\n              </div>\n            {/if}\n          </div>\n        </div>\n        {#if cIdx === chapterIdx}\n          <div class=\"pl-4\">\n            {#each chapter.sequence as scene, sIdx}\n              <div class=\"card bg-light text-black shadow card-sm mb-1\">\n                {scene.name}\n                <div class=\"story-scene-progress mt2\">\n                  <div\n                    class=\"story-scene-progress-step\"\n                    style=\"width: {sIdx < sceneIdx ? 100 : sIdx > sceneIdx ? 0 : 100 * percent}%\" />\n                </div>\n              </div>\n            {/each}\n          </div>\n        {/if}\n      {/each}\n    </div>\n  </div>\n</div>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onMount, tick } from \"svelte\";\n// @ts-ignore\nconst { ipcRenderer } = require(\"electron\");\n;\nimport { hashStringToColor, invertColor } from \"./utils\";\nimport { users } from \"./store\";\nexport let username = \"?\";\nlet user = {\n    username: \"#\",\n};\n$: normalizedName = user ? user.username : username;\n$: char = normalizedName.slice(0, 1);\n$: color = hashStringToColor(normalizedName);\nlet editing = false;\nlet input;\nfunction edit() {\n    return __awaiter(this, void 0, void 0, function* () {\n        editing = true;\n        yield tick();\n        input.focus();\n    });\n}\nfunction save() {\n    return __awaiter(this, void 0, void 0, function* () {\n        editing = false;\n        user.username = input.innerText;\n        yield ipcRenderer.invoke(\"setStoreValue\", \"user\", user);\n    });\n}\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\n    const storedUser = yield ipcRenderer.invoke(\"getStoreValue\", \"user\");\n    if (storedUser) {\n        user = storedUser;\n    }\n    users.update((prev) => prev.concat(Object.assign(Object.assign({}, user), { readonly: false, uid: \"\", uiMap: {} })));\n}));\n//# sourceMappingURL=User.svelte.js.map</script>\n\n<style>\n  .user {\n    width: 32px;\n    height: 32px;\n    border-radius: 16px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 18px;\n    font-weight: bold;\n    transition: ease-in-out 0.18s;\n  }\n\n  .user.editable {\n    padding: 0 16px;\n    width: auto;\n    min-width: 32px;\n  }\n</style>\n\n<div\n  class=\"user mr-2 {editing ? 'editable' : ''}\"\n  role=\"button\"\n  style=\"background: {color}; color: {invertColor(color)}\"\n  on:click={edit}>\n  <span\n    title={user.username === '#' ? '点击修改用户名' : normalizedName}\n    contenteditable={editing}\n    bind:this={input}\n    on:blur={save}>{char}</span>\n</div>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Replayer from \"rrweb-player\";\n;\n;\nimport { onMount, createEventDispatcher, tick, onDestroy } from \"svelte\";\nimport { pannable } from \"./pannable\";\nimport { formatTime, genNewScene } from \"./utils\";\n;\nimport Modal from \"./Modal.svelte\";\nimport RtcVideo from \"./RtcVideo.svelte\";\nimport ReadonlyUser from \"./ReadonlyUser.svelte\";\nimport { rtc, users, rtm, readonlyUsersMap, remoteStory } from \"./store\";\nimport Play from \"./icons/play.svg\";\nimport Pause from \"./icons/pause.svg\";\nimport ChatLeftText from \"./icons/chat-left-text.svg\";\nimport Scissors from \"./icons/scissors.svg\";\nimport PlusCircle from \"./icons/plus-circle.svg\";\nimport CameraVideo from \"./icons/camera-video.svg\";\nexport let chapter;\nexport let sceneIdx = 0;\nremoteStory.subscribe((newValue) => {\n    if (!newValue) {\n        return;\n    }\n    const chapterInNewValue = newValue.chapters.find((c) => c.id === chapter.id);\n    chapter = chapterInNewValue;\n});\n$: {\n    const _s = chapter.sequence[sceneIdx];\n    inScene(_s.id);\n}\nlet scene;\n$: scene = chapter.sequence[sceneIdx];\nconst dispatch = createEventDispatcher();\n$: {\n    dispatch(\"update\", { chapter, scene });\n}\nlet wrapper;\nlet replayer;\nlet rrwebReplayer;\n$: rrwebReplayer = replayer === null || replayer === void 0 ? void 0 : replayer.getReplayer();\nlet ifrmae;\n$: iframe = rrwebReplayer && rrwebReplayer.iframe;\nlet mask;\nlet selecting = false;\nlet tooltip;\nconst defaultTooltipPayload = {\n    target: null,\n    originalBoxShadow: \"\",\n    content: \"\",\n    timeOffset: 0,\n    id: -1,\n    left: 0,\n    top: 0,\n};\nlet tooltipPayload = Object.assign({}, defaultTooltipPayload);\nlet scale = 1;\nconst highlight = (target) => {\n    const { x: wrapperX, y: wrapperY } = wrapper.getBoundingClientRect();\n    const { x: baseX, y: baseY } = iframe.getBoundingClientRect();\n    const { x, y, width, height } = target.getBoundingClientRect();\n    Object.assign(mask.style, {\n        left: `${x * scale + baseX - wrapperX}px`,\n        top: `${y * scale + baseY - wrapperY}px`,\n        width: `${width * scale}px`,\n        height: `${height * scale}px`,\n        display: \"inherit\",\n    });\n};\nconst removeHighlight = () => {\n    Object.assign(mask.style, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n        display: \"none\",\n    });\n};\nconst over = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.target && event.target !== document.body) {\n        highlight(event.target);\n    }\n};\nconst click = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!selecting) {\n        return;\n    }\n    cancelSelect();\n    const { x, y, width, height } = event.target.getBoundingClientRect();\n    const { x: wrapperX, y: wrapperY } = wrapper.getBoundingClientRect();\n    const { x: baseX, y: baseY } = iframe.getBoundingClientRect();\n    tooltipPayload.target = event.target;\n    tooltipPayload.originalBoxShadow = event.target.style.boxShadow;\n    tooltipPayload.timeOffset = rrwebReplayer.getCurrentTime();\n    tooltipPayload.id = event.target.__sn.id;\n    Object.assign(event.target.style, {\n        outline: \"2px solid #e74a3b\",\n        \"outline-offset\": \"-1px\",\n    });\n    Object.assign(tooltip.style, {\n        left: `${(x + width) * scale + baseX - wrapperX}px`,\n        top: `${(y + height) * scale + baseY - wrapperY}px`,\n        display: \"block\",\n    });\n};\nconst finishTooltip = () => {\n    Object.assign(tooltip.style, {\n        left: 0,\n        top: 0,\n        display: \"none\",\n    });\n    Object.assign(tooltipPayload.target.style, {\n        outline: \"\",\n        \"outline-offset\": \"\",\n    });\n    tooltipPayload = Object.assign({}, defaultTooltipPayload);\n};\nconst cancelTooltip = () => {\n    finishTooltip();\n};\nconst saveTooltip = () => {\n    const newEffect = {\n        type: \"tooltip\",\n        payload: {\n            content: tooltipPayload.content,\n            timeOffset: tooltipPayload.timeOffset,\n            id: tooltipPayload.id,\n        },\n    };\n    scene.effects = scene.effects.concat(newEffect);\n    finishTooltip();\n    $rtm === null || $rtm === void 0 ? void 0 : $rtm.syncStory({\n        op: \"add-effect\",\n        value: {\n            chapterId: chapter.id,\n            sceneId: scene.id,\n            previousIdx: scene.effects.length - 2,\n            effect: newEffect,\n        },\n    });\n};\nconst cancelSelect = () => {\n    selecting = false;\n    removeHighlight();\n    replayer.getReplayer().disableInteract();\n    iframe.contentWindow.removeEventListener(\"mousemove\", over, {\n        capture: true,\n    });\n    iframe.contentWindow.removeEventListener(\"click\", click, { capture: true });\n};\nfunction handleSelect() {\n    replayer.pause();\n    if (selecting) {\n        cancelSelect();\n    }\n    else {\n        selecting = true;\n        replayer.getReplayer().enableInteract();\n        iframe.contentWindow.addEventListener(\"mousemove\", over, {\n            capture: true,\n        });\n        iframe.contentWindow.addEventListener(\"click\", click, { capture: true });\n    }\n}\nlet panelCoords = {\n    x: 0,\n    y: 0,\n};\nfunction handlePanMove(event) {\n    const { x, y } = wrapper.getBoundingClientRect();\n    panelCoords.x = event.detail.x - x;\n    panelCoords.y = event.detail.y - y;\n}\nlet percent = 0;\nlet metas;\n$: metas = chapter.sequence.map((scene) => {\n    if (scene.events.length < 2) {\n        return {\n            startTime: 0,\n            endTime: 0,\n            totalTime: 0,\n        };\n    }\n    const firstEvent = scene.events[0];\n    const lastEvent = scene.events[scene.events.length - 1];\n    return {\n        startTime: firstEvent.timestamp,\n        endTime: lastEvent.timestamp,\n        totalTime: lastEvent.timestamp - firstEvent.timestamp,\n    };\n});\nlet accumulatedCurrentTime = 0;\n$: {\n    let passedTotal = 0;\n    for (let i = 0; i < sceneIdx; i++) {\n        passedTotal += metas[i].totalTime;\n    }\n    accumulatedCurrentTime = currentTime + passedTotal;\n}\n$: accumulatedTotalTime = metas.reduce((prev, cur) => {\n    return prev + cur.totalTime;\n}, 0);\nfunction changeScene(idx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        sceneIdx = idx;\n        yield tick();\n        playScene(scene);\n    });\n}\nlet currentTime = 0;\nlet playerState = \"paused\";\nfunction playScene(s) {\n    if (!s || !wrapper) {\n        return;\n    }\n    if (s.url === null) {\n        return;\n    }\n    wrapper.innerHTML = \"\";\n    const { width, height } = wrapper.getBoundingClientRect();\n    percent = 0;\n    replayer = new Replayer({\n        target: wrapper,\n        props: {\n            events: s.events,\n            skipInactive: false,\n            autoPlay: false,\n            showController: false,\n            width,\n            height,\n            mouseTail: false,\n        },\n    });\n    replayer.addEventListener(\"ui-update-current-time\", (event) => {\n        currentTime = event.payload;\n    });\n    replayer.addEventListener(\"ui-update-progress\", (event) => {\n        percent = event.payload;\n    });\n    replayer.addEventListener(\"ui-update-player-state\", (event) => {\n        playerState = event.payload;\n    });\n    replayer.addEventListener(\"finish\", (event) => __awaiter(this, void 0, void 0, function* () {\n        percent = 1;\n        if (sceneIdx < chapter.sequence.length - 1) {\n            sceneIdx++;\n            yield tick();\n            playScene(scene);\n        }\n    }));\n    replayer.addEventListener(\"resize\", () => {\n        const matchedArr = getComputedStyle(rrwebReplayer.wrapper).transform.match(/matrix\\(([\\d\\.]+)/);\n        if (matchedArr) {\n            scale = parseFloat(matchedArr[1]);\n        }\n    });\n}\nlet tracksEl;\nlet tracksWidth = 0;\nfunction handleTracksClick(event) {\n    const { left } = tracksEl.getBoundingClientRect();\n    // 8 for padding\n    const x = event.clientX - left - 8;\n    percent = x / tracksWidth;\n    if (percent < 0) {\n        percent = 0;\n    }\n    else if (percent > 1) {\n        percent = 1;\n    }\n    replayer.goto(metas[sceneIdx].totalTime * percent);\n}\nfunction handleSkip() {\n    replayer.pause();\n    modalPayload = {\n        type: \"skip\",\n        payload: {\n            timeOffset: Math.round(currentTime),\n            duration: 1000,\n        },\n        // new one\n        index: -1,\n    };\n}\nlet rtcVideo = false;\nfunction handleRtcVideo() {\n    replayer.pause();\n    rtcVideo = true;\n}\nfunction handleRtcVideoFinish(event) {\n    rtcVideo = false;\n    const newEffect = {\n        type: \"rtc-video\",\n        payload: Object.assign({ timeOffset: Math.round(currentTime) }, event.detail),\n    };\n    scene.effects = scene.effects.concat(newEffect);\n    $rtm === null || $rtm === void 0 ? void 0 : $rtm.syncStory({\n        op: \"add-effect\",\n        value: {\n            chapterId: chapter.id,\n            sceneId: scene.id,\n            previousIdx: scene.effects.length - 2,\n            effect: newEffect,\n        },\n    });\n}\nlet modalPayload = null;\nfunction editEffect(effect, idx) {\n    modalPayload = Object.assign(Object.assign({}, effect), { index: idx });\n}\nfunction removeEffect(effect) {\n    const idx = scene.effects.indexOf(effect);\n    scene.effects = scene.effects.filter((e) => e !== effect);\n    if (idx > -1) {\n        $rtm === null || $rtm === void 0 ? void 0 : $rtm.syncStory({\n            op: \"remove-effect\",\n            value: {\n                chapterId: chapter.id,\n                sceneId: scene.id,\n                idx,\n            },\n        });\n    }\n}\nfunction saveEffect() {\n    const { type, payload, index } = modalPayload;\n    if (type === \"tooltip\") {\n        scene.effects[index].payload = payload;\n        $rtm === null || $rtm === void 0 ? void 0 : $rtm.syncStory({\n            op: \"update-effect\",\n            value: {\n                chapterId: chapter.id,\n                sceneId: scene.id,\n                idx: index,\n                effect: scene.effects[index],\n            },\n        });\n    }\n    if (type === \"skip\") {\n        if (index === -1) {\n            const newEffect = {\n                type,\n                payload,\n            };\n            scene.effects = scene.effects.concat(newEffect);\n            $rtm === null || $rtm === void 0 ? void 0 : $rtm.syncStory({\n                op: \"add-effect\",\n                value: {\n                    chapterId: chapter.id,\n                    sceneId: scene.id,\n                    previousIdx: scene.effects.length - 2,\n                    effect: newEffect,\n                },\n            });\n        }\n        else {\n            scene.effects[index].payload = payload;\n            $rtm === null || $rtm === void 0 ? void 0 : $rtm.syncStory({\n                op: \"update-effect\",\n                value: {\n                    chapterId: chapter.id,\n                    sceneId: scene.id,\n                    idx: index,\n                    effect: scene.effects[index],\n                },\n            });\n        }\n    }\n    modalPayload = null;\n}\nlet webview;\nlet startedRecord = false;\nfunction startRecordWeb() {\n    return __awaiter(this, void 0, void 0, function* () {\n        startedRecord = true;\n        yield webview.executeJavaScript(\"ST.startRecord()\");\n    });\n}\nfunction stopRecordWeb() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield webview.executeJavaScript(\"ST.stopRecord()\");\n        scene.events = yield webview.executeJavaScript(\"ST.getEvents()\");\n        scene.totalTime =\n            scene.events[scene.events.length - 1].timestamp -\n                scene.events[0].timestamp;\n        chapter.sequence = chapter.sequence.slice();\n        $rtm === null || $rtm === void 0 ? void 0 : $rtm.syncStory({\n            op: \"update-scene\",\n            value: {\n                chapterId: chapter.id,\n                scene,\n            },\n        });\n        yield tick();\n        playScene(scene);\n    });\n}\nfunction addScene() {\n    const newScene = genNewScene();\n    const previousId = chapter.sequence.length\n        ? chapter.sequence[chapter.sequence.length - 1].id\n        : null;\n    chapter.sequence = chapter.sequence.concat(newScene);\n    sceneIdx = chapter.sequence.length - 1;\n    $rtm === null || $rtm === void 0 ? void 0 : $rtm.syncStory({\n        op: \"add-scene\",\n        value: {\n            chapterId: chapter.id,\n            previousId,\n            scene: newScene,\n        },\n    });\n}\nfunction inScene(id) {\n    users.update((prev) => prev.map((u) => {\n        if (u.readonly) {\n            return u;\n        }\n        return Object.assign(Object.assign({}, u), { uiMap: {\n                sceneId: id,\n            } });\n    }));\n    $rtm === null || $rtm === void 0 ? void 0 : $rtm.syncUiMaps($users);\n}\nfunction outScene() {\n    users.update((prev) => prev.map((u) => {\n        if (u.readonly) {\n            return u;\n        }\n        return Object.assign(Object.assign({}, u), { uiMap: {\n                sceneId: undefined,\n            } });\n    }));\n    $rtm === null || $rtm === void 0 ? void 0 : $rtm.syncUiMaps($users);\n}\nonMount(() => {\n    playScene(scene);\n});\nonDestroy(() => outScene());\n//# sourceMappingURL=WebEditor.svelte.js.map</script>\n\n<style>\n  :global(iframe) {\n    border: none;\n  }\n\n  :global(.player) {\n    float: none;\n    border-radius: 0;\n    box-shadow: none;\n  }\n\n  .we-mask {\n    position: absolute;\n    left: 0;\n    top: 0;\n    pointer-events: none;\n    z-index: 999999;\n    background: rgba(136, 194, 232, 0.75);\n    border: 1px solid #3399ff;\n    display: none;\n  }\n\n  .we-preview {\n    flex: 1;\n    display: flex;\n    position: relative;\n  }\n\n  .we-wrapper {\n    position: relative;\n    flex: 1;\n  }\n\n  .we-tooltip {\n    position: absolute;\n    z-index: 999999;\n    background: rgba(0, 0, 0, 0.75);\n    color: white;\n    padding: 1em;\n    display: none;\n  }\n\n  .we-tooltip-btns {\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  .we-panel {\n    background: white;\n    border-top: 1px solid #e3e6f0;\n  }\n\n  .we-panel-top {\n    padding: 0.5em;\n    border-bottom: 1px solid #e3e6f0;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .we-panel-scenes {\n    padding: 0.5em;\n    border-bottom: 1px solid #e3e6f0;\n    display: flex;\n    overflow: auto;\n  }\n\n  .we-panel-top .icon {\n    font-size: 24px;\n    cursor: pointer;\n  }\n\n  .web-editor {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n  }\n\n  .we-scene-card {\n    width: 200px;\n    overflow: hidden;\n    border-left: 0.25rem solid white;\n  }\n\n  .we-scene-meta {\n    display: flex;\n    align-items: center;\n  }\n\n  .we-scene-name {\n    flex: 1;\n    overflow: hidden;\n    white-space: nowrap;\n    word-break: keep-all;\n    text-overflow: ellipsis;\n  }\n\n  .we-scene-progress {\n    flex: 1;\n    height: 6px;\n    background: #eee;\n    position: relative;\n    border-radius: 3px;\n    box-sizing: border-box;\n  }\n\n  .we-scene-progress-step {\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    background: rgba(78, 115, 223, 0.5);\n    border-radius: 3px;\n  }\n\n  .we-tracks {\n    height: 120px;\n    overflow: auto;\n    padding: 0 0.5em;\n    position: relative;\n  }\n\n  .we-track {\n    padding: 0.5em 0;\n    border-bottom: 1px solid #e3e6f0;\n    display: flex;\n    overflow: auto;\n  }\n\n  .we-tracks-handler {\n    height: 100%;\n    width: 2px;\n    background: #e74a3b;\n    position: fixed;\n    z-index: 9;\n  }\n\n  .we-tracks-handler::before {\n    content: \"\";\n    position: absolute;\n    top: -4[x];\n    left: -4px;\n    display: block;\n    width: 10px;\n    height: 10px;\n    border-radius: 5px;\n    background: #e74a3b;\n  }\n\n  .we-track .alert {\n    padding: 0.5em;\n    overflow: hidden;\n    display: flex;\n  }\n\n  .we-tooltip-track .alert {\n    max-width: 130px;\n  }\n\n  .we-track .alert > div {\n    overflow: hidden;\n    white-space: nowrap;\n    word-break: keep-all;\n    text-overflow: ellipsis;\n  }\n\n  :global(.modal) {\n    position: absolute;\n    display: inherit;\n  }\n\n  .we-panel-effects {\n    display: flex;\n    align-items: center;\n  }\n\n  webview {\n    height: 100%;\n  }\n\n  .we-url-input {\n    max-width: 500px;\n    margin: auto;\n  }\n\n  .record-panel {\n    position: absolute;\n    background: white;\n    right: 1em;\n    bottom: 1em;\n  }\n\n  .we-video-wrapper {\n    position: absolute;\n    right: 2em;\n    bottom: 2em;\n  }\n\n  .stick-users {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n  }\n</style>\n\n<div class=\"web-editor\">\n  {#if scene.events.length === 0 && scene.url}\n    <div class=\"record-panel\">\n      <button\n        class=\"btn btn-primary\"\n        on:click={startedRecord ? stopRecordWeb : startRecordWeb}>\n        {startedRecord ? '完成' : '开始录制'}\n      </button>\n      <button class=\"btn btn-dark\" on:click={() => webview.openDevTools()}>\n        debug\n      </button>\n    </div>\n    <webview bind:this={webview} src={scene.url} preload=\"./record.js\" />\n  {:else}\n    {#if scene.url}\n      <div class=\"we-preview\">\n        <div class=\"we-wrapper\" bind:this={wrapper} />\n        <div bind:this={tooltip} class=\"we-tooltip\">\n          <textarea\n            class=\"form-control form-control-sm mb-1\"\n            bind:value={tooltipPayload.content} />\n          <div class=\"we-tooltip-btns mt-1\">\n            <button\n              class=\"btn btn-light mr-1\"\n              on:click={cancelTooltip}>取消</button>\n            <button class=\"btn btn-primary\" on:click={saveTooltip}>保存</button>\n          </div>\n        </div>\n        <div bind:this={mask} class=\"we-mask\" />\n        <div class=\"we-video-wrapper\">\n          <RtcVideo\n            visible={rtcVideo}\n            on:close={() => (rtcVideo = false)}\n            on:finish={handleRtcVideoFinish} />\n        </div>\n      </div>\n    {:else}\n      <input\n        type=\"text\"\n        class=\"form-control we-url-input\"\n        placeholder=\"请输入网址\"\n        on:blur={(e) => (scene.url = e.target.value)} />\n    {/if}\n    <div class=\"we-panel\">\n      <div class=\"we-panel-top\">\n        <div>\n          {formatTime(accumulatedCurrentTime)}/{formatTime(accumulatedTotalTime)}\n        </div>\n        <div class=\"icon\" on:click={() => replayer.toggle()}>\n          {@html playerState === 'paused' ? Play : Pause}\n        </div>\n        <div class=\"we-panel-effects\">\n          {#if $rtc.localStream}\n            <div class=\"icon mr-4\" on:click={handleRtcVideo}>\n              {@html CameraVideo}\n            </div>\n          {/if}\n          <div class=\"icon mr-4\" on:click={handleSelect}>\n            {@html ChatLeftText}\n          </div>\n          <div class=\"icon\" on:click={handleSkip}>\n            {@html Scissors}\n          </div>\n        </div>\n      </div>\n      <div class=\"we-panel-scenes\">\n        {#each chapter.sequence as scene, idx}\n          <div\n            class=\"card mr-1 shadow bg-light text-black we-scene-card {idx === sceneIdx ? 'border-left-primary' : ''}\"\n            on:click={() => changeScene(idx)}\n            role=\"button\">\n            <div class=\"card-body\">\n              <div class=\"we-scene-meta\">\n                <div class=\"we-scene-name\">{scene.name}</div>\n                <small>{formatTime(scene.totalTime)}</small>\n              </div>\n              <div class=\"we-scene-progress mt-2\">\n                <div\n                  class=\"we-scene-progress-step\"\n                  style=\"width: {idx < sceneIdx ? 100 : idx > sceneIdx ? 0 : 100 * percent}%\" />\n              </div>\n            </div>\n            <div class=\"stick-users\">\n              {#each $readonlyUsersMap.scenes[scene.id] || [] as user}\n                <ReadonlyUser {user} small />\n              {/each}\n            </div>\n          </div>\n        {/each}\n        <button class=\"btn btn-light add-scene\" on:click={() => addScene()}>\n          {@html PlusCircle}\n        </button>\n      </div>\n      <div\n        class=\"we-tracks\"\n        bind:this={tracksEl}\n        bind:clientWidth={tracksWidth}\n        on:click={handleTracksClick}>\n        <div\n          class=\"we-tracks-handler\"\n          style=\"transform: translateX({tracksWidth * percent}px)\" />\n        {#each scene.effects as effect, idx}\n          <div class=\"we-{effect.type}-track we-track\">\n            {#if effect.type === 'tooltip'}\n              <div\n                class=\"alert alert-info mb-0 mr-1\"\n                style=\"transform: translateX({Math.max(0, (tracksWidth * effect.payload.timeOffset) / scene.totalTime)}px)\"\n                on:click|stopPropagation={() => editEffect(effect, idx)}\n                role=\"button\">\n                <div class=\"flex-fill\">\n                  {@html ChatLeftText}\n                  {effect.payload.content}\n                </div>\n                <button\n                  type=\"button\"\n                  class=\"close\"\n                  data-dismiss=\"alert\"\n                  aria-label=\"Close\"\n                  on:click|stopPropagation={() => removeEffect(effect)}>\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n            {:else if effect.type === 'skip'}\n              <div\n                class=\"alert alert-danger mb-0 mr-1\"\n                style=\"transform: translateX({Math.max(0, (tracksWidth * effect.payload.timeOffset) / scene.totalTime)}px);width: {(tracksWidth * effect.payload.duration) / scene.totalTime}px\"\n                on:click|stopPropagation={() => editEffect(effect, idx)}\n                role=\"button\">\n                <div class=\"flex-fill\">\n                  {@html Scissors}\n                  {formatTime(effect.payload.duration)}\n                </div>\n                <button\n                  type=\"button\"\n                  class=\"close\"\n                  data-dismiss=\"alert\"\n                  aria-label=\"Close\"\n                  on:click|stopPropagation={() => removeEffect(effect)}>\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n            {:else if effect.type === 'rtc-video'}\n              <div\n                class=\"alert alert-warning mb-0 mr-1\"\n                style=\"transform: translateX({Math.max(0, (tracksWidth * effect.payload.timeOffset) / scene.totalTime)}px);width: {(tracksWidth * effect.payload.duration) / scene.totalTime}px\"\n                role=\"button\">\n                <div class=\"flex-fill\">\n                  {@html CameraVideo}\n                  {formatTime(effect.payload.duration)}\n                </div>\n                <button\n                  type=\"button\"\n                  class=\"close\"\n                  data-dismiss=\"alert\"\n                  aria-label=\"Close\"\n                  on:click|stopPropagation={() => removeEffect(effect)}>\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n            {/if}\n          </div>\n        {/each}\n      </div>\n    </div>\n  {/if}\n</div>\n\n{#if modalPayload}\n  <Modal\n    on:close={() => {\n      modalPayload = null;\n    }}\n    on:ok={saveEffect}>\n    <div slot=\"title\">\n      {{ tooltip: '编辑 Tooltip', skip: '编辑快进', 'rtc-video': '录制视频旁白' }[modalPayload.type] || ''}\n    </div>\n    <div slot=\"body\">\n      {#if modalPayload.type === 'tooltip'}\n        <textarea\n          class=\"form-control form-control-sm mb-1\"\n          bind:value={modalPayload.payload.content} />\n      {:else if modalPayload.type === 'skip'}\n        <div class=\"form-row\">\n          <div class=\"col\">\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              placeholder=\"起始\"\n              bind:value={modalPayload.payload.timeOffset} />\n          </div>\n          <div class=\"col\">\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              placeholder=\"持续时间\"\n              bind:value={modalPayload.payload.duration} />\n          </div>\n        </div>\n      {/if}\n    </div>\n    <span slot=\"ok\">保存</span>\n  </Modal>\n{/if}\n"
  ],
  "names": [],
  "mappings": "AAiJE,CAAC,eAAe,CAAC,8BAAC,CAAC,AACjB,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,CAAC,eAAe,+BAAC,MAAM,AAAC,CAAC,AACvB,YAAY,CAAE,OAAO,AACvB,CAAC,AACD,CAAC,eAAe,+BAAC,MAAM,OAAO,AAAC,CAAC,AAC9B,OAAO,CAAE,KAAK,WAAW,CAAC,CAC1B,KAAK,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAC3B,CAAC,AAED,gCAAiB,CAAC,UAAU,eAAC,CAAC,AAC5B,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,MAAM,8BAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,IAAI,CAAE,CAAC,CACP,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,AACzB,CAAC,AAED,QAAQ,8BAAC,CAAC,AACR,WAAW,CAAE,KAAK,CAClB,YAAY,CAAE,KAAK,CACnB,aAAa,CAAE,KAAK,CACpB,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAC3C,CAAC,AAED,WAAW,8BAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,MAAM,CACb,GAAG,CAAE,MAAM,CACX,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,oBAAK,MAAM,CAAC,WAAW,eAAC,CAAC,AACvB,OAAO,CAAE,OAAO,AAClB,CAAC,AAED,SAAS,8BAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,CACd,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,KAAK,CAAC,CAAC,AAClB,CAAC,AAED,UAAU,8BAAC,CAAC,AACV,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,AACjB,CAAC,AAEO,QAAQ,AAAE,CAAC,AACjB,OAAO,CAAE,MAAM,CAAC,KAAK,AACvB,CAAC,AAED,eAAe,8BAAC,CAAC,AACf,IAAI,CAAE,CAAC,CACP,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,YAAY,8BAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,MAAM,CACb,MAAM,CAAE,MAAM,AAChB,CAAC;AChND,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,WAAW,CAAC,KAAK,AAC/B,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,GAAG,AAChB,CAAC;ACsDD,sBAAsB,cAAC,CAAC,AACtB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,OAAO,CACnB,QAAQ,CAAE,MAAM,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,YAAY,cAAC,CAAC,AACZ,IAAI,CAAE,IAAI,CACV,GAAG,CAAE,KAAK,CACV,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,aAAa,cAAC,CAAC,AACb,IAAI,CAAE,IAAI,CACV,GAAG,CAAE,KAAK,CACV,QAAQ,CAAE,QAAQ,AACpB,CAAC;ACkFD,cAAc,cAAC,CAAC,AACd,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,AAC5B,CAAC,AAED,aAAa,cAAC,CAAC,AACb,MAAM,CAAE,IAAI,AACd,CAAC,AAED,cAAc,cAAC,CAAC,AACd,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,MAAM,CACf,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,KAAK,CAAC,MAAM,CACrB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACpC,aAAa,CAAE,MAAM,AACvB,CAAC,AAED,mBAAmB,cAAC,CAAC,AACnB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACxC,UAAU,CAAE,GAAG,CACf,WAAW,CAAE,GAAG,CAChB,UAAU,CAAE,KAAK,AACnB,CAAC,AAED,0BAA0B,cAAC,CAAC,AAC1B,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,MAAM,CACf,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC1B,cAAc,CAAE,IAAI,CACpB,MAAM,CAAE,OAAO,CACf,gBAAgB,CAAE,WAAW,AAC/B,CAAC,AACD,wCAA0B,MAAM,AAAC,CAAC,AAChC,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,AAC7C,CAAC,AAED,aAAa,cAAC,CAAC,AACb,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,qBAAqB,cAAC,CAAC,AACrB,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,IAAI,CAChB,QAAQ,CAAE,QAAQ,CAClB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,UAAU,AACxB,CAAC,AAED,0BAA0B,cAAC,CAAC,AAC1B,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,UAAU,CAAE,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACnC,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,wBAAwB,cAAC,CAAC,AACxB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,IAAI,CACnB,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,IAAI,AACf,CAAC;AC7MD,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,WAAW,CAAC,KAAK,AAC/B,CAAC,AAED,KAAK,SAAS,eAAC,CAAC,AACd,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,AACjB,CAAC;ACsYO,MAAM,AAAE,CAAC,AACf,MAAM,CAAE,IAAI,AACd,CAAC,AAEO,OAAO,AAAE,CAAC,AAChB,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,CAAC,CAChB,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,QAAQ,0CAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,cAAc,CAAE,IAAI,CACpB,OAAO,CAAE,MAAM,CACf,UAAU,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CACrC,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,WAAW,0CAAC,CAAC,AACX,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,WAAW,0CAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,AACT,CAAC,AAED,WAAW,0CAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,MAAM,CACf,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAC/B,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,IAAI,AACf,CAAC,AAED,gBAAgB,0CAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,QAAQ,AAC3B,CAAC,AAED,SAAS,0CAAC,CAAC,AACT,UAAU,CAAE,KAAK,CACjB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAC/B,CAAC,AAED,aAAa,0CAAC,CAAC,AACb,OAAO,CAAE,KAAK,CACd,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,AAChC,CAAC,AAED,gBAAgB,0CAAC,CAAC,AAChB,OAAO,CAAE,KAAK,CACd,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,AAChB,CAAC,AAED,yCAAa,CAAC,KAAK,4BAAC,CAAC,AACnB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,WAAW,0CAAC,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,cAAc,0CAAC,CAAC,AACd,KAAK,CAAE,KAAK,CACZ,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,OAAO,CAAC,KAAK,CAAC,KAAK,AAClC,CAAC,AAED,cAAc,0CAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,cAAc,0CAAC,CAAC,AACd,IAAI,CAAE,CAAC,CACP,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,QAAQ,CACpB,aAAa,CAAE,QAAQ,AACzB,CAAC,AAED,kBAAkB,0CAAC,CAAC,AAClB,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,IAAI,CAChB,QAAQ,CAAE,QAAQ,CAClB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,UAAU,AACxB,CAAC,AAED,uBAAuB,0CAAC,CAAC,AACvB,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,UAAU,CAAE,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACnC,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,UAAU,0CAAC,CAAC,AACV,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,IAAI,CACd,OAAO,CAAE,CAAC,CAAC,KAAK,CAChB,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,SAAS,0CAAC,CAAC,AACT,OAAO,CAAE,KAAK,CAAC,CAAC,CAChB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,AAChB,CAAC,AAED,kBAAkB,0CAAC,CAAC,AAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,OAAO,CACnB,QAAQ,CAAE,KAAK,CACf,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,4DAAkB,QAAQ,AAAC,CAAC,AAC1B,OAAO,CAAE,EAAE,CACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,EAAE,CAAC,CAAC,CAAC,CACV,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,qCAAS,CAAC,MAAM,4BAAC,CAAC,AAChB,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,6CAAiB,CAAC,MAAM,4BAAC,CAAC,AACxB,SAAS,CAAE,KAAK,AAClB,CAAC,AAED,uBAAS,CAAC,oBAAM,CAAG,GAAG,cAAC,CAAC,AACtB,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,QAAQ,CACpB,aAAa,CAAE,QAAQ,AACzB,CAAC,AAEO,MAAM,AAAE,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,OAAO,AAClB,CAAC,AAED,iBAAiB,0CAAC,CAAC,AACjB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,OAAO,0CAAC,CAAC,AACP,MAAM,CAAE,IAAI,AACd,CAAC,AAED,aAAa,0CAAC,CAAC,AACb,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,IAAI,AACd,CAAC,AAED,aAAa,0CAAC,CAAC,AACb,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACb,CAAC,AAED,iBAAiB,0CAAC,CAAC,AACjB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACb,CAAC,AAED,YAAY,0CAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,AACX,CAAC"
}